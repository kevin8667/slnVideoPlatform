@model IEnumerable<Backstage.Models.VideoList>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

@section Styles{
    <style>
        .table th {
        min-width: 80px; /* 設置最小寬度 */
        text-align: left; /* 設置文字對齊方式 */
        white-space: nowrap; /* 防止文字換行 */
        }
        .btn{
            min-width: 40px;
            text-align: center; /* 設置文字對齊方式 */
            white-space: nowrap; /* 防止文字換行 */
        }
        /* Overlay styles */
        .overlay {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1; /* Sit on top */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgba(0,0,0,0.5); /* Black w/ opacity */
        }

        .overlay-content {
            position: absolute;
            top: 50%;
            left: 60%;
            transform: translate(-50%, -50%);
            width: 50%;
            max-width: 800px;
        }

        .overlay img {
            width: 50%;
            height: auto;
        }

        .infooverlay-content {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #fff;
            padding: 20px;
            border-radius: 10px;
            width: 80%;
            max-width: 600px;
        }
    </style>
}

<p>
    <a asp-action="Create" class="btn btn-primary me-2">新增</a>
</p>
<div class="justify-content-start m-0">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.VideoName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Type)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MainGenre)
                @* </th>
                <th style="min-width:100px">
                    @Html.DisplayNameFor(model => model.Series)
                </th>
                <th style="min-width:20px">
                    @Html.DisplayNameFor(model => model.Season)
                </th>
                <th style="min-width:50px">
                    @Html.DisplayNameFor(model => model.Episode)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RunningTime)
                </th>
                <th class="w-30">
                    @Html.DisplayNameFor(model => model.IsShowing)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ReleaseDate)
                </th> *@
                <th>
                    @Html.DisplayNameFor(model => model.Rating)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Popularity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ThumbnailId)
                </th>
                @* <th>
                    @Html.DisplayNameFor(model => model.Lang)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Summary)
                </th> *@
                <th>
                    @Html.DisplayNameFor(model => model.Views)
                </th>
               @*  <th>
                    @Html.DisplayNameFor(model => model.AgeRating)
                </th> *@
                <th>
                    @Html.DisplayNameFor(model => model.TrailerUrl)
                </th>
                
                <th>操作</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.VideoName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type.TypeName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MainGenre.GenreName)
                    </td>
                   @*  <td>
                        @Html.DisplayFor(modelItem => item.Series.SeriesName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Season.SeasonId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Episode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RunningTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsShowing)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReleaseDate)
                    </td> *@
                    <td>
                        @Html.DisplayFor(modelItem => item.Rating)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Popularity)
                    </td>
                    <td>
                        <a href="#" onclick="showOverlay(@item.VideoId); return false;" class="btn btn-primary me-2">觀看</a>
                        <div id="imageOverlay" class="overlay" >
                            <div class="overlay-content">
                                <img id="overlayImage" src="" alt="Image" />
                                <br />
                                <button class="btn btn-secondary" onclick="closeOverlay()">關閉</button>
                            </div>
                        </div>
                        @* @Html.DisplayFor(modelItem => item.ThumbnailId) *@
                    </td>
                    @* <td>
                        @Html.DisplayFor(modelItem => item.Lang)
                    </td> *@
@*                     <td>
                        <a asp-action="EditSummary" asp-route-id="@item.VideoId" class="btn btn-primary me-2">詳細</a>
                        @Html.DisplayFor(modelItem => item.Summary)
                    </td> *@
                    <td>
                        @Html.DisplayFor(modelItem => item.Views)
                    </td>
                   @*  <td>
                        @Html.DisplayFor(modelItem => item.AgeRating)
                    </td> *@
                    <td>
                        @{
                            bool isTrailerUrlAvailable = !string.IsNullOrEmpty(item.TrailerUrl);
                        }
                        @if (isTrailerUrlAvailable)
                        {
                            <a href="@item.TrailerUrl" class="btn btn-primary me-2" target="_blank">
                                觀看
                            </a>
                        }
                        else
                        {
                            <button class="btn btn-primary me-2" disabled>
                                觀看
                            </button>
                        }
                        @* <button class="btn btn-primary me-2" href="@item.TrailerUrl">觀看</button> *@
                        @* @Html.DisplayFor(modelItem => item.TrailerUrl) *@
                    </td>
                    
                    <td>
                        <div class="d-flex">
                            <a href="#" onclick="showInfoOverlay(@item.VideoId); return false;" class="btn btn-primary me-2">查看詳情</a>
                            @* <a asp-action="Details" asp-route-id="@item.VideoId" class="btn btn-primary me-2">詳細</a> *@
                            <a asp-action="Edit" asp-route-id="@item.VideoId" class="btn btn-primary me-2">編輯</a>
                            <a asp-action="Delete" asp-route-id="@item.VideoId" class="btn btn-primary me-2">刪除</a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div id="infoOverlay" class="overlay">
    <div class="infooverlay-content">
        <h3>影片資訊</h3>
        <table class="table">
            <tbody>
                <tr>
                    <th>系列:</th>
                    <td id="overlaySeries"></td>
                </tr>
                <tr>
                    <th>季:</th>
                    <td id="overlaySeason"></td>
                </tr>
                <tr>
                    <th>集:</th>
                    <td id="overlayEpisode"></td>
                </tr>
                <tr>
                    <th>主要內容類型:</th>
                    <td id="overlayMainGenre"></td>
                </tr>
                <tr>
                    <th>片長:</th>
                    <td id="overlayRunTime"></td>
                </tr>
                <tr>
                    <th>是否上映中:</th>
                    <td id="overlayIsShowing"></td>
                </tr>
                <tr>
                    <th>上映日期:</th>
                    <td id="overlayReleaseDate"></td>
                </tr>
                <tr>
                    <th>語言:</th>
                    <td id="overlayLang"></td>
                </tr>
                <tr>
                    <th>年齡分級:</th>
                    <td id="overlayAgeRating"></td>
                </tr>
                <tr>
                    <th>簡介:</th>
                    <td id="overlaySummary"></td>
                </tr>
                <!-- 加入其他需要顯示的資料 -->
            </tbody>
        </table>
        <button class="btn btn-secondary" onclick="closeInfoOverlay()">關閉</button>
    </div>
</div>

@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    
    <script>
        function showOverlay(videoId) {
            fetch(`/ImageForVideoList/GetImage?videoId=${videoId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok.');
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        document.getElementById('overlayImage').src = data.imageUrl;
                        document.getElementById('imageOverlay').style.display = 'flex';
                    } else {
                        alert(data.message);
                    }
                })
                .catch(error => console.error('Error:', error));
        }

        function closeOverlay() {
            document.getElementById('imageOverlay').style.display = 'none';
        }

        function showInfoOverlay(videoId) {
            // 根據 videoId 查詢相關的資料（可以透過 AJAX 從後端獲取）
            fetch(`/VideoList/GetVideoDetails?videoId=${videoId}`)
                .then(response => response.json())
                .then(data => {
                    console.log(data);

                    document.getElementById('overlaySeries').innerText = data.series ||"無或者未提供";
                    document.getElementById('overlaySeason').innerText = data.season || "無或者未提供";
                    document.getElementById('overlayEpisode').innerText = data.episode || "無或者未提供";
                    document.getElementById('overlayMainGenre').innerText = data.mainGenre;
                    document.getElementById('overlayRunTime').innerText = data.runningTime;
                    document.getElementById('overlayIsShowing').innerText = data.isShowing;
                    document.getElementById('overlayReleaseDate').innerText = data.releaseDate || "無或者未提供";
                    document.getElementById('overlayLang').innerText = data.lang;
                    document.getElementById('overlayAgeRating').innerText = data.ageRating || "無或者未提供";
                    document.getElementById('overlaySummary').innerText = data.summary;

                    document.getElementById('infoOverlay').style.display = 'block';
                })
                .catch(error => {
                    console.error('Error fetching video details:', error);
                });
        }

        function closeInfoOverlay() {
            document.getElementById('infoOverlay').style.display = 'none';
        }

    </script>

}

